---
title: "hotspot_japan_s1_s2"
format: html
editor: visual
---

# outline

 S1/S2・水産庁が特定した空白セル・AISのdetectionを用いて、日本のEEZ内の漁船分布を可視化
 
# motivations

## 9/8
  気候変動の緩和、脱炭素化、エネルギー安全保障に対する関心の高まりにより、洋上風力発電が世界中で急速に拡大している[1–4]。世界の洋上風力発電設備の導入数は2017年以降倍増しており、今後その導入ペースは7倍にまで加速すると推定されている[5]。そして2021年には、世界の洋上風力発電の容量が57GWに達し、前年比60%を超える増加を示した[3,6]。そして2035年までに519GWに達すると予測されている[7]。中でもイギリスは、2022年にヨーロッパの洋上風力発電容量の45%、世界の24%を占めている[8]。またアメリカでは導入が遅れているものの、急速な拡大が見込まれており、2030年までに30GW、2050年までに110GWを目指している[3]。

日本においても洋上風力発電の導入の拡大を図っており、2030年度温室効果ガス46%削減と2050年カーボンニュートラル達成という目標を掲げている[9,10]。そして2020年のグリーン成長戦略では、2030年までに洋上風力発電10GW、2040年までに30-45GW（浮体式を含む）の導入を目標に設定した[10]。洋上風力発電は土地面積による制約がなく、環境への影響が少ないとされており、また大規模な運営によってコスト削減が可能であることから[11]、日本は従来の主要エネルギー源の代わりとなる再生可能エネルギーとして導入に力を入れている。

2018年には海洋再生可能エネルギー発電設備等に係る海域の利用の促進に関する法律（洋上再エネ促進法）が制定、翌年施行され、港湾区域外の公共海域を最大30年間占有する標準化された規制が確立された[11,12]。この制度において事業は、地域の漁業者との協議・合意達成を前提としつつも、その後の不確実性が考慮されていないことから、合意形成に課題を残している[11]。一方で、日本の浅海域は限られているため、将来的な導入拡大にはEEZでの開発が不可欠とされている[13]。EEZでの事業は、深海域での浮体式風力発電を前提とする技術的課題に加え、遠洋・沖合漁業や外国漁船を含む利害関係者との国際的な調整が必要であり、領海での事業とは法制度・ステークホルダー・技術条件のいずれにおいても性質が大きく異なる[14]。

洋上風力発電の拡大は、漁業に対する影響が懸念されている。その中でも重大な懸念は、漁業との空間的競合であり、洋上風力発電の導入によってこれまで漁業者が利用していた漁場が失われる可能性がある[5,15]。そして追い出された漁業者は、他の海域へ漁場を移すことを余儀なくされ、他の漁業者との競合が激しくなり、その漁場の過剰利用へとつながる可能性がある[15]。こうした洋上風力発電の導入による影響は、漁業の生計を脅かす可能性もあり、その影響は加工業者といったサプライチェーンに波及し、沿岸地域の社会経済全体に影響をもたらす[5]。にもかかわらず、導入の漁業への影響評価は不十分であることが多く、また漁業関係者の協議への参画は限定的である[5,15]。日本においても、導入の過程、特に漁業者と事業間での合意形成において、漁業との空間競合が大きな課題となっており、漁業への影響について懸念の声が上がっている[10,11,14]。このことから、洋上風力発電の導入をめぐる調整にて、漁業への影響を検討する中で、実際にどの海域で漁業活動が行われているかを定量的に把握し、提示することが求められる。


## 9/2
  近年再生可能エネルギーの導入拡大に伴い、洋上風力発電の導入が検討されている。洋上風力は温室効果ガス削減に貢献しうる一方で、導入場所において漁業の操業が困難になることが想定され、漁業に大きな影響を与える可能性がある。これを踏まえ、洋上風力の促進区域の指定は、その海域で操業している漁業に支障を及ぼさないことを考慮する必要があり、支障を及ぼすことが見込まれる場合は、促進区域の指定は行わないことになっている。そのため、洋上風力発電の導入をめぐる調整において、「この場所では日常的に操業していない」「ここでは漁業に支障が出る」といった情報を提示する必要がある。そしてこうした判断を裏づけるためには、実際にどの海域で漁業活動が行われているのか、または行われていないのかを定量的に把握することが重要となる。

# goals

  S1/S2・水産庁が特定した空白セル・AISのdetectionを用いて、日本のEEZ内の漁船の分布を可視化・提示し、洋上風力発電の導入の検討に寄与する

# setting

```{r message=FALSE, warning=FALSE, attr.source='.numberLines', include=FALSE, results=FALSE}
# 現在の環境にある変数の消去
#rm(list = ls("all.names" = TRUE))
#データの指数表示を避ける
options(scipen = 100)
# free memory
#gc() 
```

# load packages

```{r}
library(bigrquery)
library(dplyr)
library(ggplot2)
library(sf)
library(rnaturalearth)
library(rnaturalearthdata)
library(skimr)
library(stringr)
library(forcats)
library(readr)
library(openxlsx)
library(sparklyr)
```



# function 

　AISデータを読み込む関数を定義

```{r}
load_gfw_data <- function(# default setting
  base_path = "~/Google Drive/Shared drives/gakuLab_data",
  years = 2018:2024,
  include_2025 = TRUE,
  memory_fraction = 0.90,
  master = "local"
) {
  # Sparkセッションを明示的に変数に確保
  spark_conn <- NULL
  
  # Setup Spark connection
  tryCatch({
    message("Initializing Spark connection...")
    #conf <- list(spark.memory.fraction = memory_fraction)
    # Spark接続用の設定
    config <- spark_config()
    config[["spark.serializer"]] <- "org.apache.spark.serializer.KryoSerializer"
    config[["spark.kryo.registrator"]] <- "org.apache.sedona.core.serde.SedonaKryoRegistrator"
    config[["spark.sql.extensions"]] <- "org.apache.sedona.sql.SedonaSqlExtensions"
    config$sparklyr.jars.packages <- "org.apache.sedona:sedona-spark-shaded-3.5_2.12:1.7.2-incubating"
    config$spark.sql.catalogImplementation <- "in-memory"
    
    # ハイフン付き要素は[]でアクセス
    config[["sparklyr.shell.driver-memory"]]   <- "16G"
    config[["sparklyr.shell.executor-memory"]] <- "12G"
    config[["spark.executor.memory"]]          <- "12G"
    config[["spark.driver.memory"]]            <- "16G"
    
    # 接続を試みる
    spark_conn <- sparklyr::spark_connect(master = "local", config = config)
    
    # 接続が成功したか確認
    if (!sparklyr::spark_connection_is_open(spark_conn)) {
      stop("Failed to establish Spark connection")
    }
    
    message("Spark connection established successfully!")
    
    # Helper function to read parquet data
    read_parquet_data <- function(year, type = "daily") {
      file_path <- file.path(
        base_path,
        "Original/gfw/daily/fixed_upto2024",
        paste0("dat_", type, "_", year, "_v3.parquet")
      )
      
      message(sprintf("Reading %s data for year %s...", type, year))
      
      # ファイルが存在するか確認
      if (!file.exists(file_path)) {
        warning(sprintf("File does not exist: %s", file_path))
        return(NULL)
      }
      
      tryCatch({
        df <- sparklyr::spark_read_parquet(
          sc = spark_conn,  # ここをsc=に変更
          name = paste0("dat_", type, "_", year),
          path = file_path,
          memory = FALSE,
          overwrite = TRUE
        )
        assign(paste0("daily_", year), df, envir = .GlobalEnv)
        return(df)
      }, error = function(e) {
        warning(sprintf("Error reading %s data for year %s: %s", type, year, e$message))
        return(NULL)
      })
    }
    
    # Load yearly data
    message("Loading yearly data...")
    daily_data_list <- lapply(years, function(y) read_parquet_data(y, type = "daily"))
    
    # フィルタリングしてNULL値を除去
    daily_data_list <- Filter(Negate(is.null), daily_data_list)
    
    # データが空かどうかチェック
    if (length(daily_data_list) == 0) {
      warning("No yearly data was loaded successfully")
    }
    
    # Load 2025 data if requested
    daily_2025 <- NULL
    if (include_2025) {
      message("Loading 2025 data...")
      tryCatch({
        path_2025 <- "~/Google Drive/Shared drives/gakuLab_data/Original/gfw/daily/need_update/dat_daily_2025_v3.parquet"
        
        if (file.exists(path_2025)) {
          daily_2025 <- sparklyr::spark_read_parquet(
            sc = spark_conn,  # ここをsc=に変更
            name = "dat_daily_2025",
            path = path_2025,
            memory = FALSE,
            overwrite = TRUE
          )
          assign("daily_2025", daily_2025, envir = .GlobalEnv)
        } else {
          warning("2025 data file does not exist")
        }
      }, error = function(e) {
        warning(sprintf("Error loading 2025 data: %s", e$message))
      })
    }
    
    # その他のデータ読み込み処理...
    message("Loading gfw vessel list...")
    vessel_list_path <- file.path(base_path, "Original/gfw/vessel_list/gfw_vessel_list_v3.parquet")
    
    if (file.exists(vessel_list_path)) {
      vessel_list_gfw <- sparklyr::spark_read_parquet(
        sc = spark_conn,  # ここをsc=に変更
        name = "list_vessel_gfw",
        path = vessel_list_path,
        memory = FALSE,
        overwrite = TRUE
      )
      assign("vessel_list_gfw", vessel_list_gfw, envir = .GlobalEnv)
    } else {
      warning("Vessel list file does not exist")
    }
    
    # 国コードの読み込み
    message("Loading gfw country codes...")
    country_codes_path <- file.path(base_path, "Project/gakuLab_vessel_list/list_country/GFWcountry_codes19Aug23_gakulab.csv")
    
    if (file.exists(country_codes_path)) {
      country_codes_gfw <- sparklyr::spark_read_csv(
        sc = spark_conn,  # ここをsc=に変更
        name = "list_country_gfw",
        path = country_codes_path,
        memory = FALSE,
        delimiter = ",",
        header = TRUE
      )
      assign("country_list_gfw", country_codes_gfw, envir = .GlobalEnv)
    } else {
      warning("Country codes file does not exist")
    }
    
    # データの結合
    # 少なくとも一つのデータフレームがあるか確認
    has_data_to_combine <- (length(daily_data_list) > 0) || (!is.null(daily_2025))
    
    if (has_data_to_combine) {
      message("Combining daily data...")
      daily_data_to_combine <- c(
        if (!is.null(daily_2025)) list(daily_2025),
        daily_data_list
      )
      
      # 結合するべきデータがあるか確認
      if (length(daily_data_to_combine) > 0) {
        combined_daily <- do.call(sparklyr::sdf_bind_rows, daily_data_to_combine)
        assign("combined_daily", combined_daily, envir = .GlobalEnv)
      } else {
        warning("No data to combine")
      }
    } else {
      warning("No data available to combine")
    }
    
    # 完了メッセージ
    message("Data loading completed successfully")
    assign("spark_conn", spark_conn, envir = .GlobalEnv)
    
  }, error = function(e) {
    # エラーが発生した場合、Spark接続をクリーンアップ
    if (!is.null(spark_conn) && sparklyr::spark_connection_is_open(spark_conn)) {
      message("Disconnecting Spark due to error...")
      sparklyr::spark_disconnect(spark_conn)
    }
    stop(sprintf("Error in data loading: %s", e$message))
  })
}
```


# load data

  本分析では、以下の3つのデータを用いる
  
  1. S1/S2データ
    GFWによるS1及びS2の漁船データ
    本分析では、AISを搭載していない漁船に絞る
    ここでの空白セルは、AISを搭載していない漁船の操業がないことを示している
    
  2. 空白セルデータ
    水産庁より操業実績のない空白セルのデータ
    ここでの空白セルは、大臣許可漁業の操業がないことを示している
  
  3. AISデータ
    GFWによるAISデータ
    ここでの空白セルは、AISを搭載している漁船の操業がないことを示している
  
  

## S1/S2 data

　GFWによるS1及びS2の漁船データをBigQueryから取得し、Rに読み込む

```{r}
projectid = "fish-database-275116"

# S1
sql <- "SELECT * FROM `fish-database-275116.GFW_Data.S1_published_detections_Zihan`;"
tb <- bq_project_query(projectid, sql)
s1_dat <- bq_table_download(tb)

# S2
sql <- "SELECT * FROM `fish-database-275116.GFW_Data.S2_detections_Zihan`;"
tb <- bq_project_query(projectid, sql)
s2_dat <- bq_table_download(tb)

# check
skim(s1_dat)
skim(s2_dat)
```



## white cells data

  水産庁より大臣許可漁業の操業実績のない空白セルのデータを読み込む

```{r}
# white cells
white_cells <- read.xlsx("~/Google Drive/Shared drives/gakuLab_data/Original/水産庁/EEZ水域利用/緯度経度データ（水域利用図の実績なし部分）.xlsx")
```



## AIS data

  GFWによるAISデータをSparkで読み込む

```{r}
# GFW daily data 
load_gfw_data(years = 2018:2024, include_2025 = TRUE)
# 
temp_main <- sparklyr::sdf_bind_rows(daily_2018,
                           daily_2019,
                           daily_2020,
                           daily_2021,
                           daily_2022,
                           daily_2023,
                           daily_2024,
                           daily_2025 #
                           )
```



## geo data

　地理データを読み込む

```{r}
# EEZ
eez_sf1 <-  st_read("~/Google Drive/Shared drives/gakuLab_data/Original/NEDO/EEZ_land_union_v3_202003/EEZ_Land_v3_202030.shp")  %>%  dplyr::filter(stringr::str_detect(UNION, "Japan"))  %>% 
  st_transform(4326)
eez_sf2 <- eez_sf1  %>% 
  st_union()
eez_sf <-   eez_sf2

# Japan land
japan_sf <- ne_countries(country = c('japan'),scale="large", returnclass = "sf")  %>% 　st_transform(crs = 4326)
```

# data wrangling

## S1/S2 data

　AIS未搭載の漁船を抽出したいため、ssvidが欠損しているデータに絞り、それらの緯度・経度を0.1または0.5度に丸めて集計する

```{r}
# only missing value in ssvid
s1_dat_na <- s1_dat[is.na(s1_dat$ssvid),] #17.8%
s2_dat_na <- s2_dat[is.na(s2_dat$ssvid),] #48.5%

# data flame lat lon {#sec-data-flame-latlon}
# 0.1
temp_round <- 1
s1_dat_na_0.1 <- s1_dat_na %>% 
  mutate(lat_index = round(detect_lat, temp_round), 
         lon_index = round(detect_lon, temp_round)) %>% 
  group_by(lat_index, lon_index) %>% 
  summarize(total_ditections =n()) %>% 
  ungroup() %>% 
  mutate(lat = lat_index, lon = lon_index) %>% 
  select(lat, lon, total_ditections)

s2_dat_na_0.1 <- s2_dat_na %>% 
  mutate(lat_index = round(detect_lat, temp_round), 
         lon_index = round(detect_lon, temp_round)) %>% 
  group_by(lat_index, lon_index) %>% 
  summarize(total_ditections =n()) %>% 
  ungroup() %>% 
  mutate(lat = lat_index, lon = lon_index) %>% 
  select(lat, lon, total_ditections)

# 0.5
s1_dat_na_0.5 <- s1_dat_na %>% 
  mutate(lat_index = round(detect_lat * 2) / 2, 
         lon_index = round(detect_lon * 2) / 2) %>% 
  group_by(lat_index, lon_index) %>% 
  summarize(total_ditections =n()) %>% 
  ungroup() %>% 
  mutate(lat = lat_index, lon = lon_index) %>% 
  select(lat, lon, total_ditections)

s2_dat_na_0.5 <- s2_dat_na %>% 
  mutate(lat_index = round(detect_lat * 2) / 2, 
         lon_index = round(detect_lon * 2) / 2) %>% 
  group_by(lat_index, lon_index) %>% 
  summarize(total_ditections =n()) %>% 
  ungroup() %>% 
  mutate(lat = lat_index, lon = lon_index) %>% 
  select(lat, lon, total_ditections)
```



## AIS data

  　GFWによるAISデータを漁船に絞り、緯度・経度を0.1度に丸めて集計する

```{r}
# fishing vessel class
fishing_vessel_set <- c("drifting_longlines", "fish_factory","fishing","fixed_gear",           
"other_purse_seines", "pole_and_line","pots_and_traps",    
"purse_seines",     "set_longlines","squid_jigger",    "trawlers",     "tuna_purse_seines")

temp_dat <- temp_main

# data flame lat lon
temp_dat_cleaned <- temp_dat %>% 
  
  select(ssvid, first_timestamp, last_timestamp, avg_lat_lon) %>%
  
  sparklyr::mutate(year_st  = substring_index(first_timestamp, "-",1),
          month_st  = substring_index(substring_index(first_timestamp, "-",2), "-", -1), 
          day_st  = str_sub(substring_index(first_timestamp, " ", 1), -2))  %>%  
  
  # mutate date  for JP time     
    sparklyr::mutate(first_timestamp_jp = from_utc_timestamp(first_timestamp, "Asia/Tokyo"),
          last_timestamp_jp = from_utc_timestamp(last_timestamp, "Asia/Tokyo"),
          month_jp = month(first_timestamp_jp), 
          year_jp = year(first_timestamp_jp),
          day_jp = day(first_timestamp_jp),
          year = as.numeric(year_jp)) %>%  
  
  sparklyr::mutate(detect_lon = as.numeric(str_sub(substring_index(avg_lat_lon, " ", 1), start = 7L, end = -1L)), 
    detect_lat = as.numeric(str_sub(substring_index(avg_lat_lon, " ", -1), start = 1L, end = -2L)),
    lat_index  = round(detect_lat, temp_round),
    lon_index  = round(detect_lon, temp_round)) %>%
  
  left_join(vessel_list_gfw, by = c("ssvid", "year_st" = "year")) %>% 
  filter(best_vessel_class %in% fishing_vessel_set) %>% 
  
  group_by(lat_index, lon_index) %>%
  summarise(total_ditections = n()) %>%
  sparklyr::mutate(lat = lat_index, lon = lon_index) %>%
  ungroup() %>%
  select(lat, lon, total_ditections)  

# register table
sdf_register(temp_dat_cleaned, "ais_detections")
tbl_cache(spark_conn, "ais_detections")

# collect
ais_dat <- temp_dat_cleaned %>% collect()
```



# plot

　作成した 0.1・0.5度の集計データを日本地図上にプロット、漁船の分布を可視化

## S1/S2(0.1)

```{r}
## S1(0.1)
fig_s1_0.1 <- ggplot() +  
  geom_tile(data = s1_dat_na_0.1, aes(x=lon, y=lat, fill=log(total_ditections)))+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  xlim(125, 146) + ylim(25, 47) +
  scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S1 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true") 
fig_s1_0.1 #425*600

## S2(0.1)
fig_s2_0.1 <- ggplot() + 
  geom_tile(data = s2_dat_na_0.1, aes(x=lon, y=lat, fill=log(total_ditections)))+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  xlim(125, 146) + ylim(25, 47) +
  scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S2 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true") 
fig_s2_0.1
```

 S1とS2で分布のパターンが異なっている。S1は漁船の分布が比較的限定的で、日本沿岸部に集中した分布を示している。S2は沖合にも及ぶ広範囲での分布が示されている。 
 S2について、沿岸に近いほど漁船が多いことがわかる。一方で沖合では空白のセル、すなわちAIS未搭載の漁船が操業していないセルが散在している。日本のEEZ内だと、特に日本海側の沖合にて漁船の操業が確認されなかったセルが多く分布していることがわかる。

## S1/S2(0.5)

```{r}
## S1(0.5)
fig_s1_0.5 <- ggplot() + 
  geom_tile(data = s1_dat_na_0.5, aes(x=lon, y=lat, fill=log(total_ditections)))+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  xlim(125, 146) + ylim(25, 47) +
  scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S1 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true") 
fig_s1_0.5

## S2(0.5)
fig_s2_0.5 <- ggplot() +  
  geom_tile(data = s2_dat_na_0.5, aes(x=lon, y=lat, fill=log(total_ditections)))+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  xlim(125, 146) + ylim(25, 47) +
  scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S2 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true") 
fig_s2_0.5
```

　0.1度毎と同様、S1とS2で分布が異なっている。そして双方とも沿岸側に漁船の分布が集中している。
　
　

## 空白セル

```{r}
fig_white_cells <- ggplot() +  
  # eez
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  # white cells
  geom_tile(data = white_cells, aes(x=Lon, y=Lat), fill = "white", alpha = 0.8)+ 
  coord_sf(xlim = c(120, 155), ylim = c(20, 47), expand = FALSE) +
  labs(fill = "S1 detections") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=13),
        legend.title = element_text(size=15))  #+
fig_white_cells #650*600
```

 S2データに基づく空白セルの分布と同様に、日本のEEZ内で特に日本海側の沖合に空白セル、すなわち大臣許可漁業が操業していないセルが多く分布していることがわかる。また南西のEEZ境界線付近や九州・沖縄の西側沖合、北・南大東島の南側沖合、小笠原諸島北部沖合、瀬戸内海にも空白セルが集中している。



## AIS

```{r}
fig_ais_0.1 <- ggplot() + 
  geom_tile(data = ais_dat, aes(x=lon, y=lat, fill=log(total_ditections)))+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  xlim(125, 146) + ylim(25, 47) +
  scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S2 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true") 
fig_ais_0.1
```

  S2・空白セルデータに基づく分布と同様に、日本海側での空白セル、すなわちAIS搭載漁船が見られないセルが顕著である。また空白セルデータでも示されていたように、南西のEEZ境界線付近や九州・沖縄の西側の沖合に空白セルが分布している。



## 複合

  各データを用いて複合的にプロット、以下の4パターンを作成
  
  1. S2+空白セル
  2. AIS+空白セル
  3. AIS+S2
  4. S2+空白セル+AIS
  
  なお、S1はS2と比較して分布が少なく、また分布も限定的であるため、S1を含む複合図は作成しない
  加えて、複数のデータによるdetectionを重ねたときどこが空白になるかを強調したいため、detection部分は黒でプロットする
  
  結果の解釈について、漁船はAIS搭載・未搭載で区分できることから、S2及びAISによる分布を重ねた上で空白の部分は、漁業が操業していないエリアであると解釈する。

### S2+空白セル

```{r}
fig_white_cells_s2 <- ggplot() +  
  geom_tile(data = s2_dat_na_0.1, aes(x=lon, y=lat, fill=log(total_ditections)), colour = "black")+ 
  # eez
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  # white cells
  geom_tile(data = white_cells, aes(x=Lon, y=Lat), fill = "white", alpha = 0.3)+ 
  coord_sf(xlim = c(120, 155), ylim = c(20, 47), expand = FALSE) +
  #scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S1 detections") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
fig_white_cells_s2
```

  日本海側、特に北陸沖での空白セル同士の重なりが点在している。また南西のEEZ境界線付近や九州・沖縄の西側の沖合にも空白セルの重なりが点在している。



### 空白セル+AIS

```{r}
fig_white_cells_ais <- ggplot() + 
  geom_tile(data = ais_dat, aes(x=lon, y=lat, fill=log(total_ditections)), alpha = 0.6, colour = "black")+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  # white cells
  geom_tile(data = white_cells, aes(x=Lon, y=Lat), fill = "white", alpha = 0.3) + 
  xlim(125, 146) + ylim(25, 47) +
  #scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S2 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true")`
fig_white_cells_ais
```

　S2+空白セルと同様、北陸沖、南西のEEZ境界線付近、九州・沖縄の西側の沖合に空白セルの重なりが分布している。



### AIS+S2

```{r}
fig_s2_ais <- ggplot() + 
  geom_tile(data = ais_dat, aes(x=lon, y=lat, fill=log(total_ditections)), alpha = 0.6, colour = "black")+ #, alpha = temp_alpha
  geom_tile(data = s2_dat_na_0.1, aes(x=lon, y=lat, fill=log(total_ditections)), alpha = 0.6, colour = "black")+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) + 
  xlim(125, 146) + ylim(25, 47) +
  #scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S2 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true")`
fig_s2_ais
```

　日本海沖を中心にまばらに空白セルが点在している。ここでの空白セルは、AIS搭載・未搭載の漁船どちらも操業されていないことを示しており、漁業が操業されていないと解釈する。



### S2+空白セル+AIS

```{r}
fig_combined <- ggplot() + 
  geom_tile(data = ais_dat, aes(x=lon, y=lat, fill=log(total_ditections)), alpha = 0.6, colour = "black")+ #, alpha = temp_alpha
  geom_tile(data = s2_dat_na_0.1, aes(x=lon, y=lat, fill=log(total_ditections)), alpha = 0.6, colour = "black")+ #, alpha = temp_alpha
  #scale_fill_viridis_c(option=temp_virid_op ) +
  geom_sf(data = eez_sf, alpha = .1, col = "#D0104C") +
  # Japan Land
  geom_sf(data = japan_sf) +
  # white cells
  geom_tile(data = white_cells, aes(x=Lon, y=Lat), fill = "white", alpha = 0.3) + 
  xlim(125, 146) + ylim(25, 47) +
  #scale_fill_gradient(low = "blue", high = "yellow") +
  labs(fill = "S2 detections (Log)") +
  theme(legend.box = "vertical",
        legend.position = "bottom",
        axis.text = element_text(size=10),
        panel.background = element_rect(fill="lightblue"),
        panel.grid = element_blank(),
        legend.text = element_text(angle=45,hjust=1,size=10),
        legend.title = element_text(size=10))  #+
  #ggspatial::annotation_scale( location = "br") + 
  #ggspatial::annotation_north_arrow(location = "tr", which_north = "true")`
fig_combined
```

  日本海沖にいくつか空白セルの重なりが見られるが非常に少なく、ほぼ全ての海域で、AIS搭載漁船または未搭載漁船のいずれかが操業している。



# result

  ここではS1/S2・水産庁が特定した空白セル・AISのdetectionを用いて、日本のEEZ内の漁船の分布をプロットした。
  S1による漁船の分布は日本沿岸部に集中し、比較的限定的な分布を示した。一方でS2では沖合を含む広範囲に分布が確認され、沿岸に近いほど多く分布する傾向を示した。特に日本海側の沖合では空白セル（AIS未搭載の漁船の操業がない）が多く分布していることがわかった。
  水産庁が特定した空白セルを可視化した結果、S2と同様に日本海側の沖合に空白セル（大臣許可漁業の操業がない）が顕著に分布していた。その他にも、南西のEEZ境界線付近や九州・沖縄の西側沖合、北・南大東島の南側沖合、小笠原諸島北部沖合、瀬戸内海にも空白セルが集中していた。
  AISデータに基づく分布でも、日本海側における空白セル（AIS搭載の漁船の操業がない）が顕著であり、S2・空白セルデータと同様の傾向を示した。特に南西EEZ境界付近や九州・沖縄西方の沖合域に空白が重なる点は一致している。
  3つのデータを組み合わせた結果、日本海沖において、AIS搭載・未搭載の漁船どちらも操業がされていないセルが点在していることがわかった。一方でほぼ全ての海域で、AIS搭載漁船または未搭載漁船のいずれかの操業が確認されており、AIS搭載・未搭載の漁船どちらも操業がされていないセルは非常に少ないことがわかった。この結果から、日本海沖に点在する一部の海域では操業がほとんど行われていない可能性が示唆された。これらの海域は、漁業に支障をきたす可能性が比較的低いと考えられ、洋上風力発電の促進区域として検討する上で有力な情報となりうる。しかし、多くの海域ではAIS搭載漁船または未搭載漁船のいずれかによる漁業の操業が確認されており、促進区域として指定できる海域は非常に少ないことが示された。



# reference
[1]	M. Püts, A. Kempf, C. Möllmann, M. Taylor, Trade-offs between fisheries, offshore wind farms and marine protected areas in the southern North Sea – Winners, losers and effective spatial management, Mar. Policy 152 (2023) 105574.

[2]	A. Lipsky, A. Silva, F. Gilmour, Y. Arjona, F. Hogan, J. Lloret, D. Bolser, S. Haase, D. Oesterwind, T. ten Brink, M. Roach, K. Ford, Fisheries independent surveys in a new era of offshore wind energy development, ICES J. Mar. Sci. 82 (2025) fsae060.

[3]	E.T. Methratta, A. Silva, A. Lipsky, K. Ford, D. Christel, L. Pfeiffer, Science priorities for offshore wind and fisheries research in the Northeast U.s. continental Shelf ecosystem: Perspectives from scientists at the national marine fisheries service, Mar. Coast. Fish. 15 (2023) e10242.

[4]	K.A. Alexander, T.A. Wilding, J. Jacomina Heymans, Attitudes of Scottish fishers towards marine renewable energy, Mar. Policy 37 (2013) 239–244.

[5]	C.L. Szostek, S.C.L. Watson, N. Trifonova, N.J. Beaumont, B.E. Scott, Spatial conflict in offshore wind farms: Challenges and solutions for the commercial fishing industry, Energy Policy 200 (2025) 114555.

[6]	GWEC, Global wind energy report 2022, (2022). https://www.lerenovaveis.org/contents/lerpublication/gwec_2022_mar_global-wind-report-2022.pdf.

[7]	WFO, Global Offshore Wind Report: 2022, (2023). https://wfo-global.org/wp-content/uploads/2023/03/WFO_Global-Offshore-Wind-Report-2022.pdf.

[8]	CrownEstate, Offshore Wind Report 2022, (2022). https://www.thecrownestate.co.uk/media/4378/final-published_11720_owoperationalreport_2022_tp_250423.pdf.

[9]	Policy Speech by the Prime Minister to the 203rd Session of the Diet (Speeches and Statements by the Prime Minister), https://japan.kantei.go.jp/99_suga/statement/202010/_00006.html (accessed September 7, 2025).

[10]	K. Iwata, S. Kyoi, Y. Ushifusa, Public attitudes of offshore wind energy in Japan: An empirical study using choice experiments, Cleaner Energy Systems 4 (2023) 100052.

[11]	S. Tajima, K. Yamaguchi, H. Shiroyama, Consensus building with fishermen on offshore wind farms in Japan: Current status and policy recommendations, Mar. Policy 160 (2024) 105975.

[12]	Act on Promoting the Utilization of Sea Areas for the Development of Marine Renewable Energy Power Generation Facilities - English - Japanese Law Translation, (n.d.). https://www.japaneselawtranslation.go.jp/en/laws/view/3580/en (accessed September 7, 2025).

[13]	Ryota Wada, Amir R. Nejad, Kazuhiro Iijima, Junji Shimazaki, Mihaela Ibrion, Shinnosuke Wanaka, Hideo Nomura, Yoshitaka Mizushima, Takuya Nakashima, Ken Takagi, Floating Offshore Wind in Japan: Addressing the Challenges, Efforts, and Research gaps, Wind Energ. Sci. Discuss (2025) 1–58.

[14]	IEEJ, Challenges and solutions to deploying floating offshore wind power in Japan, (2024). https://eneken.ieej.or.jp/data/11717.pdf.

[15]	G. Van Hoey, F. Bastardie, S. Birchenough, A. De Backer, A. Gill, S. De Koning, S. Hodgson, S. Mangi Chai, J. Steenbergen, E. Termeer, S. Van den Burg, N. Hintzen, Overview of the effects of offshore wind farms on fisheries and aquaculture: EASME/EMFF/2018/011 lot 1 : Specific contract no. 03 : Final report, 2021.

